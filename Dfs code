class Solution {
public:
    void dfs(vector<vector<int>>& adj,vector<bool>& visited,int node){
        visited[node]=true;
        for(auto& a:adj[node]){
            if(!visited[a])
            dfs(adj,visited,a);
        }
    }
    int findCircleNum(vector<vector<int>>& isConn) {
        int n=isConn.size();
        vector<vector<int>> adj(n);
        vector<bool> visited(n,false);
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(isConn[i][j]==1){
                adj[i].push_back(j);
                adj[j].push_back(i);
                }
            }
        }
        int count=0;
        for(int i=0;i<n;i++){
            if(!visited[i]){
            dfs(adj,visited,i);
            count++;
            }
        }   
        return count;
    }
};
